{"version":3,"sources":["os (ignored)","./src/environments/environment.ts","./src/app/azure-blob-storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/sas/sas.component.ts","./src/app/sas/sas.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { BlobServiceClient, ContainerClient } from '@azure/storage-blob';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AzureBlobStorageService {\n\n  // Enter your storage account name\n  picturesAccount = \"ngblobstest\";\n  // container name\n  picturesContainer = \"pictures\";\n\n  // +IMAGES\n  public uploadImage(sas: string, content: Blob, name: string, handler: () => void) {\n    this.uploadBlob(content, name, this.containerClient(sas), handler)\n  }\n\n  public listImages(sas: string): Promise<string[]> {\n    return this.listBlobs(this.containerClient(sas))\n  }\n\n  public downloadImage(sas: string, name: string, handler: (blob: Blob) => void) {\n    this.downloadBlob(name, this.containerClient(sas), handler)\n  }\n\n  public deleteImage(sas: string, name: string, handler: () => void) {\n    this.deleteBlob(name, this.containerClient(sas), handler)\n  }\n  // -IMAGES\n\n  // private uploadBlob(content: Blob, name: string, client: ContainerClient, handler: () => void) {\n  //   let blockBlobClient = client.getBlockBlobClient(name);\n  //   blockBlobClient.uploadData(\n  //     content, { blobHTTPHeaders: { \n  //     blobContentType: content.type \n    \n  //   } })\n  //     .then(() => handler())\n  // }\n\n  private uploadBlob(content: Blob, name: string, client: ContainerClient, handler: () => void) {\n    let blockBlobClient = client.getBlockBlobClient(name);\n    blockBlobClient.uploadData(content, {\n      maxSingleShotSize: 1 * 1024 * 1024,\n      blockSize: 1 * 1024 * 1024,\n      concurrency: 20,\n      blobHTTPHeaders: { blobContentType: content.type },\n      onProgress: (ev) => {\n        console.log(ev);\n        let mb = (ev.loadedBytes /(1e+6))\n        console.log(`se han subido: ${mb} Megabytes`);\n\n    },\n    })\n    .then(()=>handler())\n  }\n\n\n\n\n\n\n  private async listBlobs(client: ContainerClient): Promise<string[]> {\n    let result: string[] = []\n\n    let blobs = client.listBlobsFlat();\n    for await (const blob of blobs) {\n      result.push(blob.name)\n    }\n\n    return result;\n  }\n\n  private downloadBlob(name: string, client: ContainerClient, handler: (blob: Blob) => void) {\n    const blobClient = client.getBlobClient(name);\n    blobClient.download().then(resp => {\n      resp.blobBody.then(blob => {\n        handler(blob)\n      })\n    })\n  }\n\n  private deleteBlob(name: string, client: ContainerClient, handler: () => void) {\n    client.deleteBlob(name).then(() => {\n      handler()\n    })\n  }\n\n  private containerClient(sas: string): ContainerClient {\n    return new BlobServiceClient(`https://${this.picturesAccount}.blob.core.windows.net?${sas}`)\n            .getContainerClient(this.picturesContainer);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'azure-blob-storage';\n\n}\n","<app-sas></app-sas>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SasComponent } from './sas/sas.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SasComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AzureBlobStorageService } from './../azure-blob-storage.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sas',\n  templateUrl: './sas.component.html',\n  styleUrls: ['./sas.component.css']\n})\nexport class SasComponent implements OnInit {\n\n  // SAS (shared access signatures)\n  sas = \"sp=racwdl&st=2022-07-22T00:34:20Z&se=2022-08-22T08:34:20Z&spr=https&sv=2021-06-08&sr=c&sig=ZjPjMaD0kwEwRVFJZwqJQ4fo%2FQ088xY%2FOAKkT%2BU1ZCU%3D\";\n\n  picturesList: string[] = [];\n  picturesDownloaded: string[] = []\n\n\n  constructor(private blobService: AzureBlobStorageService) {\n\n  }\n\n  ngOnInit(): void {\n    this.reloadImages()\n  }\n\n  // public setSas(event) {\n  //   this.sas = event.target.value\n  // }\n\n  public imageSelected(file: File) {\n    this.blobService.uploadImage(this.sas, file, file.name, () => {\n      this.reloadImages()\n    })\n  }\n\n\n  public deleteImage (name: string) {\n    this.blobService.deleteImage(this.sas, name, () => {\n      this.reloadImages()\n    })\n  }\n\n  public downloadImage (name: string) {\n    const para = document.getElementById('vistaPreviaImage');\n    this.blobService.downloadImage(this.sas, name, blob => {\n       let url = window.URL.createObjectURL(blob);\n      para.setAttribute('src',url);\n\n      document.getElementById(\"myDIV\").appendChild(para);\n     // window.open(url);\n    })\n  }\n\n  private reloadImages() {\n    this.blobService.listImages(this.sas).then(list => {\n      this.picturesList = list\n      const array = []\n      this.picturesDownloaded = array\n      for (let name of this.picturesList) {\n        this.blobService.downloadImage(this.sas, name, blob => {\n          var reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function () {\n            array.push(reader.result as string)\n          }\n        })\n      }\n    })\n  }\n}\n","<h2 class=\"text-center mb-4 \">Carga de archivos con conexión intermitente</h2>\n<!-- <table>\n  <tr>\n    <td></td>\n    <td><input type=\"file\" (change)=\"imageSelected($event.target.files[0])\"></td>\n  </tr>\n  <tr>\n    <td>Insert SAS:</td><td><input type=\"text\" (change)=\"setSas($event)\" size=\"90\"></td>\n  </tr>\n  <tr>\n    <td>Current SAS:</td>\n    <td>{{sas}}</td>\n  </tr>\n</table> -->\n<h4 class=\"text-center\">Lista de archivos en Blob Storage</h4>\n<ul class=\"list-group\" style=\"width: 60%; margin:0 auto; min-width: 400px\">\n\n  <li class=\"list-group-item list-group-item-action\" style=\"display:flex; justify-content: space-evenly;\">\n    <input type=\"file\" (change)=\"imageSelected($event.target.files[0])\" class=\"m-2 pb-5 form-control form-control-lg\">\n  </li>\n\n  <li class=\"list-group-item list-group-item-action\" *ngFor=\"let pic of picturesList\"\n    style=\"display:flex;  justify-content: center;\">\n    <h5 class=\"col-6\" style=\"font-size: 15px ;\"> Nombre: {{pic}}</h5>\n    <div style=\"gap: 15px ; display: flex;\" class=\"col-6\">\n      <button (click)=\"deleteImage(pic)\" class=\"btn btn-danger btn-lg\">Borrar</button>\n      <button (click)=\"downloadImage(pic)\" download=\"pic\" class=\"btn btn-success\">Vista previa</button>\n    </div>\n  </li>\n</ul>\n<hr>\n<h3 class=\"text-center\">Vista previa</h3>\n<div id=\"myDIV\" *ngIf=\"picturesList.length >0\">\n  <img id=\"vistaPreviaImage\" class=\"card-img\"\n    src=\"https://www.pulsorunner.com/wp-content/uploads/2014/10/default-img.gif\">\n</div>\n\n<!-- <h4>Downloaded</h4>\n<img *ngFor=\"let blob of picturesDownloaded\" src=\"{{blob}}\" height=\"100px\"> -->","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}